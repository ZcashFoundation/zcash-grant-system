"""Adds RFP bounty, matching, and date fields

Revision ID: d39bb526eef4
Revises: 3793d9a71e27
Create Date: 2019-02-07 15:09:11.548655

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import expression
from datetime import datetime, timedelta


# revision identifiers, used by Alembic.
revision = 'd39bb526eef4'
down_revision = '3793d9a71e27'
branch_labels = None
depends_on = None


def upgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rfp', sa.Column('bounty', sa.String(length=255), nullable=True))
    op.add_column('rfp', sa.Column('date_closed', sa.DateTime(), nullable=True))
    op.add_column('rfp', sa.Column('date_closes', sa.DateTime(), nullable=True))
    op.add_column('rfp', sa.Column('date_opened', sa.DateTime(), nullable=True))
    op.add_column('rfp', sa.Column('matching', sa.Boolean(), nullable=False, server_default=expression.false()))
    # ### end Alembic commands ###

    # Set columns for times based on status.
    connection = op.get_bind()
    connection.execute("UPDATE rfp SET date_opened = now() - INTERVAL '1 DAY' WHERE status = 'LIVE' OR status = 'CLOSED'")
    connection.execute("UPDATE rfp SET date_closed = now() WHERE status = 'CLOSED'")
    


def downgrade():
# ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('rfp', 'matching')
    op.drop_column('rfp', 'date_opened')
    op.drop_column('rfp', 'date_closes')
    op.drop_column('rfp', 'date_closed')
    op.drop_column('rfp', 'bounty')
    op.create_table('rfp_proposal',
    sa.Column('rfp_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposal.id'], name='rfp_proposal_proposal_id_fkey'),
    sa.ForeignKeyConstraint(['rfp_id'], ['rfp.id'], name='rfp_proposal_rfp_id_fkey'),
    sa.UniqueConstraint('proposal_id', name='rfp_proposal_proposal_id_key')
    )
    # ### end Alembic commands ###
